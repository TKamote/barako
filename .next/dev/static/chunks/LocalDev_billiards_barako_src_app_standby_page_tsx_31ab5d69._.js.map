{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/davidonquit/LocalDev/billiards/barako/src/app/standby/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\nconst StandbyPage = () => {\n  const [selectedStartTime, setSelectedStartTime] = useState(\"15:00\"); // 3:00 PM\n  const [timeLeft, setTimeLeft] = useState(0); // seconds\n  const [isRunning, setIsRunning] = useState(false);\n\n  // Generate start time options (12:00 PM to 8:00 PM in 30-minute intervals)\n  const timeOptions = [];\n  for (let hour = 12; hour <= 20; hour++) {\n    for (let minutes = 0; minutes < 60; minutes += 30) {\n      const timeString = `${hour.toString().padStart(2, \"0\")}:${minutes\n        .toString()\n        .padStart(2, \"0\")}`;\n      const displayTime = new Date(\n        `2000-01-01T${timeString}`\n      ).toLocaleTimeString(\"en-US\", {\n        hour: \"numeric\",\n        minute: \"2-digit\",\n        hour12: true,\n      });\n      timeOptions.push({\n        value: timeString,\n        label: displayTime,\n      });\n    }\n  }\n\n  // Load persisted state on component mount\n  useEffect(() => {\n    const loadPersistedState = () => {\n      const savedStartTime = localStorage.getItem(\"standby-start-time\");\n      const savedIsRunning = localStorage.getItem(\"standby-is-running\");\n      const savedTimeLeft = localStorage.getItem(\"standby-time-left\");\n      const savedStartTimestamp = localStorage.getItem(\n        \"standby-start-timestamp\"\n      );\n\n      if (savedStartTime) {\n        setSelectedStartTime(savedStartTime);\n      }\n\n      if (savedIsRunning === \"true\" && savedTimeLeft && savedStartTimestamp) {\n        const startTimestamp = parseInt(savedStartTimestamp);\n        const now = Date.now();\n        const elapsed = Math.floor((now - startTimestamp) / 1000);\n        const remaining = parseInt(savedTimeLeft) - elapsed;\n\n        if (remaining > 0) {\n          setTimeLeft(remaining);\n          setIsRunning(true);\n        } else {\n          setTimeLeft(0);\n          setIsRunning(false);\n          localStorage.removeItem(\"standby-start-time\");\n          localStorage.removeItem(\"standby-is-running\");\n          localStorage.removeItem(\"standby-time-left\");\n          localStorage.removeItem(\"standby-start-timestamp\");\n        }\n      }\n    };\n\n    loadPersistedState();\n  }, []);\n\n  // Countdown timer effect\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    if (isRunning && timeLeft > 0) {\n      interval = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            setIsRunning(false);\n            localStorage.removeItem(\"standby-start-time\");\n            localStorage.removeItem(\"standby-is-running\");\n            localStorage.removeItem(\"standby-time-left\");\n            localStorage.removeItem(\"standby-start-timestamp\");\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n\n    return () => clearInterval(interval);\n  }, [isRunning, timeLeft]);\n\n  const startTimer = () => {\n    // Calculate time until selected start time\n    const now = new Date();\n    const today = now.toDateString();\n    const selectedDateTime = new Date(`${today} ${selectedStartTime}`);\n\n    // If selected time has passed today, set for tomorrow\n    if (selectedDateTime <= now) {\n      selectedDateTime.setDate(selectedDateTime.getDate() + 1);\n    }\n\n    const timeUntilStart = Math.floor(\n      (selectedDateTime.getTime() - now.getTime()) / 1000\n    );\n\n    setTimeLeft(timeUntilStart);\n    setIsRunning(true);\n\n    // Save to localStorage\n    localStorage.setItem(\"standby-start-time\", selectedStartTime);\n    localStorage.setItem(\"standby-is-running\", \"true\");\n    localStorage.setItem(\"standby-time-left\", timeUntilStart.toString());\n    localStorage.setItem(\"standby-start-timestamp\", now.getTime().toString());\n  };\n\n  const stopTimer = () => {\n    setIsRunning(false);\n    localStorage.setItem(\"standby-is-running\", \"false\");\n  };\n\n  const resetTimer = () => {\n    setIsRunning(false);\n    setTimeLeft(0);\n\n    // Clear localStorage\n    localStorage.removeItem(\"standby-start-time\");\n    localStorage.removeItem(\"standby-is-running\");\n    localStorage.removeItem(\"standby-time-left\");\n    localStorage.removeItem(\"standby-start-timestamp\");\n  };\n\n  const formatTime = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n\n    return `${hours.toString().padStart(2, \"0\")}:${minutes\n      .toString()\n      .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Tournament Title */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            PBS 10-Ball @ Klassic Club\n          </h1>\n          <div className=\"w-24 h-1 bg-blue-600 mx-auto rounded\"></div>\n        </div>\n\n        {/* Countdown Timer */}\n        <div className=\"bg-white rounded-lg shadow-lg p-8 mb-8\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl font-semibold text-gray-900 mb-6\">\n              Tournament Countdown\n            </h2>\n\n            {/* Timer Display */}\n            <div className=\"mb-8\">\n              <div className=\"text-6xl font-mono font-bold text-blue-600 mb-4\">\n                {formatTime(timeLeft)}\n              </div>\n\n              {timeLeft === 0 && !isRunning && (\n                <div className=\"text-2xl text-gray-800\">\n                  Tournament Complete! üèÜ\n                </div>\n              )}\n            </div>\n\n            {/* Time Selection */}\n            <div className=\"mb-8\">\n              <label className=\"block text-sm font-medium text-gray-700 mb-3\">\n                Select Tournament Start Time:\n              </label>\n              <div className=\"max-w-xs mx-auto\">\n                <select\n                  value={selectedStartTime}\n                  onChange={(e) => setSelectedStartTime(e.target.value)}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-center text-lg font-medium text-gray-900\"\n                >\n                  {timeOptions.map((option) => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n\n            {/* Control Buttons */}\n            <div className=\"flex justify-center space-x-4\">\n              {!isRunning && timeLeft === 0 && (\n                <button\n                  onClick={startTimer}\n                  className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\n                >\n                  ‚ñ∂Ô∏è Start Tournament\n                </button>\n              )}\n\n              {isRunning && (\n                <button\n                  onClick={stopTimer}\n                  className=\"bg-orange-100 hover:bg-orange-200 text-orange-700 px-6 py-3 rounded-lg font-medium transition-colors\"\n                >\n                  ‚è∏Ô∏è Pause\n                </button>\n              )}\n\n              {!isRunning && timeLeft > 0 && (\n                <button\n                  onClick={startTimer}\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\n                >\n                  ‚ñ∂Ô∏è Resume\n                </button>\n              )}\n\n              <button\n                onClick={resetTimer}\n                className=\"bg-gray-100 hover:bg-gray-200 text-gray-600 px-6 py-3 rounded-lg font-medium transition-colors\"\n              >\n                üîÑ Reset\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StandbyPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}