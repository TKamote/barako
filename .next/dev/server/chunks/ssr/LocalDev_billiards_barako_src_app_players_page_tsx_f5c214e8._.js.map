{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/davidonquit/LocalDev/billiards/barako/src/app/players/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport {\n  collection,\n  getDocs,\n  addDoc,\n  updateDoc,\n  doc,\n} from \"firebase/firestore\";\nimport { db } from \"@/lib/firebase\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\ninterface Player {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  skillLevel: \"beginner\" | \"intermediate\" | \"advanced\" | \"expert\";\n  rating: number;\n  points: number;\n  tournamentsPlayed: number;\n  wins: number;\n  status: \"active\" | \"inactive\";\n  photoURL?: string;\n}\n\nconst PlayersPage = () => {\n  const { isManager } = useAuth();\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showLoginPrompt, setShowLoginPrompt] = useState(false);\n\n  // Load players from Firestore on component mount\n  useEffect(() => {\n    const loadPlayers = async () => {\n      try {\n        setLoading(true);\n        const playersCollection = collection(db, \"players\");\n        const playersSnapshot = await getDocs(playersCollection);\n        const playersList = playersSnapshot.docs.map((doc) => {\n          const data = doc.data();\n          return {\n            id: doc.id,\n            ...data,\n            points: data.points || 0, // Ensure points exists with default value\n          };\n        }) as Player[];\n\n        // Sort players by points in descending order (higher points = better rank)\n        const sortedPlayers = playersList.sort((a, b) => b.points - a.points);\n        setPlayers(sortedPlayers);\n      } catch (error) {\n        console.error(\"Error loading players:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPlayers();\n  }, []);\n\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [editingPlayer, setEditingPlayer] = useState<Player | null>(null);\n  const [newPlayer, setNewPlayer] = useState({\n    name: \"\",\n    points: \"\",\n    skillLevel: \"beginner\" as\n      | \"beginner\"\n      | \"intermediate\"\n      | \"advanced\"\n      | \"expert\",\n    photo: null as File | null,\n  });\n  const [photoPreview, setPhotoPreview] = useState<string | null>(null);\n\n  const handleCreatePlayer = async () => {\n    // Check for duplicate name\n    const duplicateName = players.find(\n      (player) => player.name.toLowerCase() === newPlayer.name.toLowerCase()\n    );\n\n    if (duplicateName) {\n      alert(`Player with name \"${newPlayer.name}\" already exists!`);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const playerData = {\n        name: newPlayer.name,\n        email: \"\", // Default empty email\n        phone: \"\", // Default empty phone\n        skillLevel: newPlayer.skillLevel,\n        rating: 0, // Not used for ranking, kept for compatibility\n        points: Number(newPlayer.points) || 0,\n        tournamentsPlayed: 0,\n        wins: 0,\n        status: \"active\",\n        photoURL: photoPreview || \"\", // Store preview data URL temporarily\n      };\n\n      // Add to Firestore\n      const docRef = await addDoc(collection(db, \"players\"), playerData);\n\n      // Update local state with new player including Firestore ID\n      const newPlayerWithId: Player = {\n        id: docRef.id,\n        ...playerData,\n        status: \"active\" as const,\n      };\n\n      // Re-sort players after adding (by points descending)\n      const updatedPlayers = [...players, newPlayerWithId].sort(\n        (a, b) => b.points - a.points\n      );\n      setPlayers(updatedPlayers);\n      setNewPlayer({\n        name: \"\",\n        points: \"\",\n        skillLevel: \"beginner\",\n        photo: null,\n      });\n      setPhotoPreview(null);\n      setShowCreateForm(false);\n    } catch (error) {\n      console.error(\"Error creating player:\", error);\n      const errorMessage =\n        error instanceof Error ? error.message : \"Unknown error\";\n      alert(\n        `Failed to create player: ${errorMessage}\\n\\nCheck the console for more details.`\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEditPlayer = (player: Player) => {\n    if (!isManager) {\n      setShowLoginPrompt(true);\n      return;\n    }\n    console.log(\"Editing player:\", player);\n    setEditingPlayer(player);\n    setNewPlayer({\n      name: player.name,\n      points: player.points?.toString() || \"\",\n      skillLevel: player.skillLevel,\n      photo: null,\n    });\n    // Show existing photo if available\n    setPhotoPreview(player.photoURL || null);\n    setShowCreateForm(true);\n  };\n\n  const handleUpdatePlayer = async () => {\n    if (editingPlayer) {\n      // Check for duplicate name (excluding the current player being edited)\n      const duplicateName = players.find(\n        (player) =>\n          player.name.toLowerCase() === newPlayer.name.toLowerCase() &&\n          player.id !== editingPlayer.id\n      );\n\n      if (duplicateName) {\n        alert(`Player with name \"${newPlayer.name}\" already exists!`);\n        return;\n      }\n\n      try {\n        setLoading(true);\n\n        // Update in Firestore\n        const playerRef = doc(db, \"players\", editingPlayer.id);\n        const updateData: {\n          name: string;\n          points: number;\n          skillLevel: string;\n          photoURL?: string;\n        } = {\n          name: newPlayer.name,\n          points: Number(newPlayer.points) || 0,\n          skillLevel: newPlayer.skillLevel,\n        };\n\n        // Only update photoURL if a new photo was uploaded\n        if (photoPreview) {\n          updateData.photoURL = photoPreview;\n        }\n\n        await updateDoc(playerRef, updateData);\n\n        // Update local state\n        const updatedPlayers = players.map((player) =>\n          player.id === editingPlayer.id\n            ? {\n                ...player,\n                name: newPlayer.name,\n                points: Number(newPlayer.points) || 0,\n                skillLevel: newPlayer.skillLevel,\n                ...(photoPreview && { photoURL: photoPreview }),\n              }\n            : player\n        );\n\n        // Re-sort players after updating (by points descending)\n        const sortedPlayers = updatedPlayers.sort(\n          (a, b) => b.points - a.points\n        );\n        setPlayers(sortedPlayers);\n        setEditingPlayer(null);\n        setNewPlayer({\n          name: \"\",\n          points: \"\",\n          skillLevel: \"beginner\",\n          photo: null,\n        });\n        setPhotoPreview(null);\n        setShowCreateForm(false);\n      } catch (error) {\n        console.error(\"Error updating player:\", error);\n        alert(\"Failed to update player. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  const handleCancelEdit = () => {\n    setEditingPlayer(null);\n    setNewPlayer({\n      name: \"\",\n      points: \"\",\n      skillLevel: \"beginner\",\n      photo: null,\n    });\n    setPhotoPreview(null);\n    setShowCreateForm(false);\n  };\n\n  const handlePhotoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0] || null;\n    setNewPlayer({\n      ...newPlayer,\n      photo: file,\n    });\n\n    // Create compressed preview URL\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const img = new Image();\n        img.onload = () => {\n          // Create canvas for compression\n          const canvas = document.createElement(\"canvas\");\n          const ctx = canvas.getContext(\"2d\");\n\n          // Resize to max 400x400 (good for profile photos)\n          const maxSize = 400;\n          let width = img.width;\n          let height = img.height;\n\n          if (width > height) {\n            if (width > maxSize) {\n              height = (height * maxSize) / width;\n              width = maxSize;\n            }\n          } else {\n            if (height > maxSize) {\n              width = (width * maxSize) / height;\n              height = maxSize;\n            }\n          }\n\n          canvas.width = width;\n          canvas.height = height;\n\n          // Draw and compress\n          ctx?.drawImage(img, 0, 0, width, height);\n\n          // Convert to compressed data URL (JPEG at 0.7 quality)\n          const compressedDataUrl = canvas.toDataURL(\"image/jpeg\", 0.7);\n          setPhotoPreview(compressedDataUrl);\n        };\n        img.src = reader.result as string;\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setPhotoPreview(null);\n    }\n  };\n\n  const handleAddPlayerClick = () => {\n    if (!isManager) {\n      setShowLoginPrompt(true);\n      return;\n    }\n    setShowCreateForm(true);\n  };\n\n  const handleDeletePlayer = async () => {\n    if (!editingPlayer) return;\n\n    const confirmDelete = window.confirm(\n      `Are you sure you want to delete \"${editingPlayer.name}\"? This action cannot be undone.`\n    );\n\n    if (!confirmDelete) return;\n\n    try {\n      setLoading(true);\n\n      // Delete from Firestore\n      const { deleteDoc } = await import(\"firebase/firestore\");\n      const playerRef = doc(db, \"players\", editingPlayer.id);\n      await deleteDoc(playerRef);\n\n      // Update local state\n      const updatedPlayers = players.filter((p) => p.id !== editingPlayer.id);\n      setPlayers(updatedPlayers);\n\n      setEditingPlayer(null);\n      setNewPlayer({\n        name: \"\",\n        points: \"\",\n        skillLevel: \"beginner\",\n        photo: null,\n      });\n      setPhotoPreview(null);\n      setShowCreateForm(false);\n      alert(\"Player deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting player:\", error);\n      alert(\"Failed to delete player. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-gray-50 min-h-screen\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-center mb-6 gap-4\">\n          <div>\n            <h1 className=\"text-2xl font-bold text-gray-900\">Players</h1>\n            {isManager && (\n              <p className=\"text-sm text-gray-600 mt-1\">\n                ✏️ Click on any player to edit or delete\n              </p>\n            )}\n          </div>\n          <button\n            onClick={handleAddPlayerClick}\n            disabled={loading}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg flex items-center transition-colors disabled:opacity-50\"\n          >\n            ➕ Add Player\n          </button>\n        </div>\n\n        {loading && players.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-4xl mb-4\">⏳</div>\n            <p className=\"text-gray-600\">Loading players...</p>\n          </div>\n        )}\n\n        {/* Login Prompt Modal */}\n        {showLoginPrompt && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md mx-4\">\n              <div className=\"text-center\">\n                <div className=\"text-6xl mb-4\">🔒</div>\n                <h2 className=\"text-2xl font-bold mb-2 text-gray-900\">\n                  Manager Login Required\n                </h2>\n                <p className=\"text-gray-600 mb-6\">\n                  Only logged-in managers can add or edit players. Please login\n                  to continue.\n                </p>\n                <div className=\"flex flex-col sm:flex-row gap-3 justify-center\">\n                  <button\n                    onClick={() => {\n                      setShowLoginPrompt(false);\n                      window.location.href = \"/tournament\"; // Redirect to tournament page where login button is\n                    }}\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-colors\"\n                  >\n                    Go to Login\n                  </button>\n                  <button\n                    onClick={() => setShowLoginPrompt(false)}\n                    className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 px-6 py-2 rounded-lg transition-colors\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Create Player Modal */}\n        {showCreateForm && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-white rounded-lg p-6 w-full max-w-md max-h-[90vh] overflow-y-auto\">\n              <h2 className=\"text-xl font-bold mb-4 text-gray-900\">\n                {editingPlayer ? \"Edit Player\" : \"Add New Player\"}\n              </h2>\n\n              {/* Profile Photo at Top */}\n              {photoPreview && (\n                <div className=\"mb-6 text-center\">\n                  <div className=\"relative inline-block\">\n                    {/* eslint-disable-next-line @next/next/no-img-element */}\n                    <img\n                      src={photoPreview}\n                      alt=\"Player profile\"\n                      className=\"w-24 h-24 object-cover rounded-full border-4 border-blue-500 mx-auto\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setNewPlayer({ ...newPlayer, photo: null });\n                        setPhotoPreview(null);\n                      }}\n                      className=\"absolute top-0 right-0 bg-red-500 text-white rounded-full w-7 h-7 flex items-center justify-center hover:bg-red-600 shadow-lg\"\n                      title=\"Remove photo\"\n                    >\n                      ✕\n                    </button>\n                  </div>\n                  <p className=\"text-xs text-gray-500 mt-2\">Profile Photo</p>\n                </div>\n              )}\n\n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Player Photo (Optional)\n                  </label>\n                  <input\n                    type=\"file\"\n                    accept=\"image/*\"\n                    onChange={handlePhotoChange}\n                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 text-black\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    {photoPreview\n                      ? \"Photo added - see preview above\"\n                      : \"Photo will be saved to Firebase Storage\"}\n                  </p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Player Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={newPlayer.name}\n                    onChange={(e) => {\n                      console.log(\"Name changing to:\", e.target.value);\n                      setNewPlayer({ ...newPlayer, name: e.target.value });\n                    }}\n                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 text-black\"\n                    placeholder=\"Enter player name\"\n                  />\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Points ⭐\n                  </label>\n                  <input\n                    type=\"number\"\n                    value={newPlayer.points}\n                    onChange={(e) => {\n                      setNewPlayer({\n                        ...newPlayer,\n                        points: e.target.value,\n                      });\n                    }}\n                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 text-black\"\n                    placeholder=\"Enter tournament points\"\n                  />\n                  <p className=\"text-xs text-gray-500 mt-1\">\n                    Ranking is determined by points (higher = better)\n                  </p>\n                </div>\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                    Skill Level\n                  </label>\n                  <select\n                    value={newPlayer.skillLevel}\n                    onChange={(e) =>\n                      setNewPlayer({\n                        ...newPlayer,\n                        skillLevel: e.target.value as\n                          | \"beginner\"\n                          | \"intermediate\"\n                          | \"advanced\"\n                          | \"expert\",\n                      })\n                    }\n                    className=\"w-full border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 text-black\"\n                  >\n                    <option value=\"beginner\">Beginner</option>\n                    <option value=\"intermediate\">Intermediate</option>\n                    <option value=\"advanced\">Advanced</option>\n                    <option value=\"expert\">Expert</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex justify-between items-center mt-6\">\n                <div>\n                  {editingPlayer && (\n                    <button\n                      onClick={handleDeletePlayer}\n                      disabled={loading}\n                      className=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg disabled:opacity-50 flex items-center gap-2\"\n                    >\n                      🗑️ Delete Player\n                    </button>\n                  )}\n                </div>\n                <div className=\"flex space-x-3\">\n                  <button\n                    onClick={handleCancelEdit}\n                    className=\"px-4 py-2 text-gray-600 hover:text-gray-800\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    onClick={\n                      editingPlayer ? handleUpdatePlayer : handleCreatePlayer\n                    }\n                    disabled={loading}\n                    className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg disabled:opacity-50\"\n                  >\n                    {editingPlayer ? \"Update Player\" : \"Add Player\"}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Players Table */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Left Column - Players 1-32 */}\n          <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n            <div className=\"bg-gray-50 px-4 py-3 border-b\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                Players 1-25\n              </h3>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-16\">\n                      Rank\n                    </th>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-16\">\n                      Photo\n                    </th>\n                    <th className=\"px-3 py-2 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                      Players\n                    </th>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-20\">\n                      Points\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {players.slice(0, 25).map((player, i) => (\n                    <tr\n                      key={player.id}\n                      className={`transition-colors ${\n                        isManager ? \"hover:bg-blue-50 cursor-pointer\" : \"\"\n                      }`}\n                      onClick={() => handleEditPlayer(player)}\n                      title={isManager ? \"Click to edit\" : \"\"}\n                    >\n                      <td className=\"px-2 py-2 text-center text-lg font-medium text-gray-900 w-16\">\n                        #{i + 1}\n                      </td>\n                      <td className=\"px-2 py-2 text-center w-16\">\n                        {player.photoURL ? (\n                          <div className=\"w-8 h-8 mx-auto\">\n                            {/* eslint-disable-next-line @next/next/no-img-element */}\n                            <img\n                              src={player.photoURL}\n                              alt={player.name}\n                              className=\"w-full h-full object-cover rounded-full border-2 border-blue-400\"\n                            />\n                          </div>\n                        ) : (\n                          <div className=\"w-6 h-6 bg-linear-to-br from-blue-400 to-blue-600 rounded-full flex items-center justify-center text-sm mx-auto\">\n                            👤\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"px-3 py-2 text-lg text-gray-900\">\n                        {player.name}\n                      </td>\n                      <td className=\"px-2 py-2 text-center text-lg text-gray-900 w-20\">\n                        {player.points}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Middle Column - Players 26-50 */}\n          <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n            <div className=\"bg-gray-50 px-4 py-3 border-b\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                Players 26-50\n              </h3>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-16\">\n                      Rank\n                    </th>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-16\">\n                      Photo\n                    </th>\n                    <th className=\"px-3 py-2 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                      Players\n                    </th>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-20\">\n                      Points\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {players.slice(25, 50).map((player, i) => (\n                    <tr\n                      key={player.id}\n                      className={`transition-colors ${\n                        isManager ? \"hover:bg-blue-50 cursor-pointer\" : \"\"\n                      }`}\n                      onClick={() => handleEditPlayer(player)}\n                      title={isManager ? \"Click to edit\" : \"\"}\n                    >\n                      <td className=\"px-2 py-2 text-center text-lg font-medium text-gray-900 w-16\">\n                        #{i + 26}\n                      </td>\n                      <td className=\"px-2 py-2 text-center w-16\">\n                        {player.photoURL ? (\n                          <div className=\"w-8 h-8 mx-auto\">\n                            {/* eslint-disable-next-line @next/next/no-img-element */}\n                            <img\n                              src={player.photoURL}\n                              alt={player.name}\n                              className=\"w-full h-full object-cover rounded-full border-2 border-green-400\"\n                            />\n                          </div>\n                        ) : (\n                          <div className=\"w-6 h-6 bg-linear-to-br from-green-400 to-green-600 rounded-full flex items-center justify-center text-sm mx-auto\">\n                            👤\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"px-3 py-2 text-lg text-gray-900\">\n                        {player.name}\n                      </td>\n                      <td className=\"px-2 py-2 text-center text-lg text-gray-900 w-20\">\n                        {player.points}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* Right Column - Players 51-75 */}\n          <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\n            <div className=\"bg-gray-50 px-4 py-3 border-b\">\n              <h3 className=\"text-lg font-semibold text-gray-900\">\n                Players 51-75\n              </h3>\n            </div>\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-16\">\n                      Rank\n                    </th>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-16\">\n                      Photo\n                    </th>\n                    <th className=\"px-3 py-2 text-left text-base font-medium text-gray-500 uppercase tracking-wider\">\n                      Players\n                    </th>\n                    <th className=\"px-2 py-2 text-center text-base font-medium text-gray-500 uppercase tracking-wider w-20\">\n                      Points\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {players.slice(50, 75).map((player, i) => (\n                    <tr\n                      key={player.id}\n                      className={`transition-colors ${\n                        isManager ? \"hover:bg-blue-50 cursor-pointer\" : \"\"\n                      }`}\n                      onClick={() => handleEditPlayer(player)}\n                      title={isManager ? \"Click to edit\" : \"\"}\n                    >\n                      <td className=\"px-2 py-2 text-center text-lg font-medium text-gray-900 w-16\">\n                        #{i + 51}\n                      </td>\n                      <td className=\"px-2 py-2 text-center w-16\">\n                        {player.photoURL ? (\n                          <div className=\"w-8 h-8 mx-auto\">\n                            {/* eslint-disable-next-line @next/next/no-img-element */}\n                            <img\n                              src={player.photoURL}\n                              alt={player.name}\n                              className=\"w-full h-full object-cover rounded-full border-2 border-purple-400\"\n                            />\n                          </div>\n                        ) : (\n                          <div className=\"w-6 h-6 bg-linear-to-br from-purple-400 to-purple-600 rounded-full flex items-center justify-center text-sm mx-auto\">\n                            👤\n                          </div>\n                        )}\n                      </td>\n                      <td className=\"px-3 py-2 text-lg text-gray-900\">\n                        {player.name}\n                      </td>\n                      <td className=\"px-2 py-2 text-center text-lg text-gray-900 w-20\">\n                        {player.points}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {!loading && players.length === 0 && (\n          <div className=\"text-center py-12\">\n            <div className=\"text-6xl mb-4\">👥</div>\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n              No players yet\n            </h3>\n            <p className=\"text-gray-600\">\n              Click &quot;Add Player&quot; to create your first player\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default PlayersPage;\n"],"names":[],"mappings":"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","debugId":null}}]
}